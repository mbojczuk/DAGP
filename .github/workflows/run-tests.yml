name: Run test-wrapper on push and PR

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: 1
      TEST_WRAPPER_DIR: tests-wrapper
      MAIN_RUNNER: main.py
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (if any)
        run: |
          python -m pip install --upgrade pip

      - name: Run tests and capture output
        id: run_tests
        run: |
          cd "${TEST_WRAPPER_DIR}"
          python "${MAIN_RUNNER}" > ../test-run-output.log 2>&1 || true
          echo "log_saved=../test-run-output.log" >> $GITHUB_OUTPUT

      - name: Extract final JSON summary from runner output
        id: extract
        run: |
          LOGFILE=../test-run-output.log
          python - <<'PY' > extracted_summary.json
import sys
import json

logpath = sys.argv[1]
with open(logpath, "r", encoding="utf-8") as f:
    s = f.read()
idx = s.rfind("{")
if idx == -1:
    print("{}")
    sys.exit(0)
cand = s[idx:]
try:
    obj = json.loads(cand)
    print(json.dumps(obj))
except Exception:
    print("{}")
PY "${LOGFILE}"

      - name: Post PR comment with results (pull_request only)
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUM=${{ github.event.pull_request.number }}
          REPO="${{ github.repository }}"
          SUMMARY=$(cat extracted_summary.json)

          python - <<'PY' > pr_comment.md
import json
import sys

s = json.loads(sys.argv[1])
lines = []
lines.append("### Test-wrapper results")
if any(v == "fail" for v in s.values()):
    lines.append("- Overall: **FAIL** ❌")
else:
    lines.append("- Overall: **PASS** ✅")
lines.append("")
lines.append("**Details**:")
for k in sorted(s.keys()):
    if k.endswith("_message"):
        continue
    status = s[k]
    if status == "success":
        lines.append(f"- {k}: ✅ success")
    else:
        msg = s.get(f"{k}_message", "")
        lines.append(f"- {k}: ❌ fail — {msg}")
lines.append("")
lines.append("<details><summary>Full JSON summary</summary>\n\n```json\n")
lines.append(json.dumps(s, indent=2))
lines.append("\n```\n</details>")
print("\n".join(lines))
PY "${SUMMARY}"

          COMMENT_BODY=$(cat pr_comment.md | jq -Rs .)
          API_URL="https://api.github.com/repos/${REPO}/issues/${PR_NUM}/comments"
          curl -sS -H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Content-Type: application/json" \
            --data "{\"body\": ${COMMENT_BODY}}" \
            "${API_URL}" > /dev/null